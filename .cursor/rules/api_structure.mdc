---
description:
globs:
alwaysApply: false
---
# API架构指南

本项目使用FastAPI构建RESTful API，以下是相关的关键文件和概念。

## 关键文件

- **主应用**: [enterprise_kb/api/api.py](mdc:enterprise_kb/api/api.py)
  - 创建FastAPI应用实例
  - 配置中间件和CORS
  - 注册路由器和全局异常处理

- **文档路由**: [enterprise_kb/api/document_routes.py](mdc:enterprise_kb/api/document_routes.py)
  - 提供文档管理API端点
  - 处理文件上传和表单数据
  - 实现CRUD操作

- **搜索路由**: [enterprise_kb/api/search_routes.py](mdc:enterprise_kb/api/search_routes.py)
  - 提供知识检索API端点
  - 处理搜索请求和参数验证

- **数据模型**: [enterprise_kb/models/schemas.py](mdc:enterprise_kb/models/schemas.py)
  - 定义API请求和响应模型
  - 使用Pydantic v2进行数据验证
  - 实现类型注解和默认值

## API端点

### 文档管理

- `POST /api/v1/documents`: 上传并处理文档
- `GET /api/v1/documents`: 获取文档列表
- `GET /api/v1/documents/{doc_id}`: 获取文档详情
- `PUT /api/v1/documents/{doc_id}`: 更新文档元数据
- `DELETE /api/v1/documents/{doc_id}`: 删除文档

### 知识检索

- `POST /api/v1/search`: 执行知识检索
- `GET /api/v1/search/health`: 检索服务健康检查

## 最佳实践

- 使用依赖注入管理服务实例
- 实现统一的错误处理
- 使用路由器组织相关端点
- 提供详细的API文档
