---
description: AI模型提供商集成指南
globs: 
alwaysApply: false
---
# AI模型提供商集成指南

## 支持的模型提供商
企业知识库平台目前支持以下AI模型提供商：

1. **OpenAI** - 默认提供商，提供强大的嵌入和LLM能力
2. **DashScope** - 阿里云智能语言模型服务，支持中文场景

## 配置文件
模型提供商的主要配置在 [enterprise_kb/core/config/settings.py](mdc:enterprise_kb/core/config/settings.py) 中定义：

```python
# 模型提供商配置
EMBEDDING_PROVIDER: Literal["openai", "dashscope"] = os.getenv("EMBEDDING_PROVIDER", "openai")
LLM_PROVIDER: Literal["openai", "dashscope"] = os.getenv("LLM_PROVIDER", "openai")

# OpenAI配置
OPENAI_API_KEY: str = os.getenv("OPENAI_API_KEY", "")
OPENAI_EMBED_MODEL_NAME: str = os.getenv("OPENAI_EMBED_MODEL_NAME", "text-embedding-3-small")
OPENAI_CHAT_MODEL_NAME: str = os.getenv("OPENAI_CHAT_MODEL_NAME", "gpt-3.5-turbo")

# DashScope配置
DASHSCOPE_API_KEY: str = os.getenv("DASHSCOPE_API_KEY", "")
DASHSCOPE_EMBED_MODEL_NAME: str = os.getenv("DASHSCOPE_EMBED_MODEL_NAME", "text-embedding-v2")
DASHSCOPE_CHAT_MODEL_NAME: str = os.getenv("DASHSCOPE_CHAT_MODEL_NAME", "qwen-max")
```

## 环境变量设置
在 `.env` 文件中设置以下环境变量来配置模型提供商：

```
# 选择模型提供商
EMBEDDING_PROVIDER="openai"  # 或 "dashscope"
LLM_PROVIDER="openai"  # 或 "dashscope"

# OpenAI配置
OPENAI_API_KEY="your-openai-api-key"
OPENAI_EMBED_MODEL_NAME="text-embedding-3-small"
OPENAI_CHAT_MODEL_NAME="gpt-3.5-turbo"

# DashScope配置
DASHSCOPE_API_KEY="your-dashscope-api-key"
DASHSCOPE_EMBED_MODEL_NAME="text-embedding-v2"
DASHSCOPE_CHAT_MODEL_NAME="qwen-max"
```

## 模型初始化逻辑
应用启动时，[enterprise_kb/core/config/settings.py](mdc:enterprise_kb/core/config/settings.py) 中的 `get_settings()` 函数会根据选定的提供商初始化相应的模型：

```python
# 配置嵌入模型
if settings_instance.EMBEDDING_PROVIDER == "openai":
    from llama_index.embeddings.openai import OpenAIEmbedding
    LlamaSettings.embed_model = OpenAIEmbedding(
        model=settings_instance.OPENAI_EMBED_MODEL_NAME,
        api_key=settings_instance.OPENAI_API_KEY
    )
elif settings_instance.EMBEDDING_PROVIDER == "dashscope":
    from llama_index.embeddings.dashscope import DashScopeEmbedding
    LlamaSettings.embed_model = DashScopeEmbedding(
        model_name=settings_instance.DASHSCOPE_EMBED_MODEL_NAME,
        api_key=settings_instance.DASHSCOPE_API_KEY
    )

# 配置LLM模型
if settings_instance.LLM_PROVIDER == "openai":
    from llama_index.llms.openai import OpenAI
    LlamaSettings.llm = OpenAI(
        model=settings_instance.OPENAI_CHAT_MODEL_NAME,
        api_key=settings_instance.OPENAI_API_KEY
    )
elif settings_instance.LLM_PROVIDER == "dashscope":
    from llama_index.llms.dashscope import DashScope
    LlamaSettings.llm = DashScope(
        model_name=settings_instance.DASHSCOPE_CHAT_MODEL_NAME,
        api_key=settings_instance.DASHSCOPE_API_KEY
    )
```

## 参数差异
注意不同模型提供商的API参数存在差异：
- OpenAI模型使用 `model` 参数
- DashScope模型使用 `model_name` 参数

## 测试与验证
可以使用以下测试文件验证模型提供商集成：
- [tests/core/test_dashscope_direct.py](mdc:tests/core/test_dashscope_direct.py) - 直接测试DashScope API
- [tests/core/test_dashscope_integration.py](mdc:tests/core/test_dashscope_integration.py) - 测试应用中的DashScope集成

## 更换模型时的注意事项
更换嵌入模型提供商时，需要执行以下步骤：
1. 更新 `.env` 文件中的 `EMBEDDING_PROVIDER` 设置
2. 确保对应的API密钥已配置
3. 清空并重建Milvus集合（向量维度可能不同）
4. 重新处理文档生成新的嵌入向量
